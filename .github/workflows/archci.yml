on:
  workflow_dispatch:
  push:
    branches:
      - extui-align
  pull_request:
    branches:
      - extui-align

jobs:
  build:
    name: deploy standalone build for arch-linux
    runs-on: ubuntu-latest
    env:
      CACHE_BUILD: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4
  
      - name: Cache build files
        id: cache-build
        uses: actions/cache@v4
        with:
          # Cache the entire build folder and .hide files
          path: |
            build/**/*    
          key: ${{ runner.os }}-build-${{ hashFiles('CMakeLists.txt', '**/CMakeLists.txt', '**/*.cpp', '**/*.h') }} 
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Fix permissions for build directory (after cache restore)
        if: steps.cache-build.outputs.cache-hit == 'true'
        run: |
          sudo chown -R root:root ./build  
          sudo chmod -R 755 ./build
          echo "CACHE_BUILD=true" >> $GITHUB_ENV

      - name: Check CACHE_BUILD in next step
        run: |
          echo "CACHE_BUILD value: $CACHE_BUILD"
    
      - name: Docker for Arch
        run: |
          docker pull archlinux:base-devel
          docker run --rm \
            -v $GITHUB_WORKSPACE:/workspace \
            -v $GITHUB_WORKSPACE/build:/workspace/build \
            -v $GITHUB_WORKSPACE/out:/workspace/out \
            -w /workspace \
            -e CACHE_BUILD=$CACHE_BUILD \
            archlinux:base-devel bash -c "
              pacman -Syu --noconfirm &&
              pacman -S --noconfirm \
                cmake \
                ninja \
                qt5-base \
                qt5-multimedia \
                openal \
                sdl2 \
                glu &&
              mkdir -p build out &&
              
              echo "CACHE_BUILD value: \$CACHE_BUILD"
              
              if [ "\$CACHE_BUILD" == "false" ]; then
                cmake -G Ninja -S ./yabause -B ./build \
                  -DCMAKE_INSTALL_PREFIX='./out' \
                  -DCMAKE_BUILD_TYPE=Release \
                  -DYAB_USE_QT5=ON
              fi
    
              ninja -C ./build && ninja -C ./build install
            "

      # Step 6: Upload build artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: kronos-artifact
          path: ./out/
