on:
  workflow_dispatch:
  push:
    branches:
      - extui-align
  pull_request:
    branches:
      - extui-align

jobs:
  build:
    name: deploy standalone build for arch-linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
  
      - name: Cache build files
        uses: actions/cache@v4
        with:
          # Cache the entire build folder and .hide files
          path: |
            build/**/*    
          key: ${{ runner.os }}-build-${{ hashFiles('CMakeLists.txt', '**/CMakeLists.txt', '**/*.cpp', '**/*.h') }}  # Use CMake files or other build system files as the cache key
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Docker for Arch
        run: |
          docker pull archlinux:base-devel
          docker run --rm \
            -v $GITHUB_WORKSPACE:/workspace \
            -v $GITHUB_WORKSPACE/build:/workspace/build \
            -v $GITHUB_WORKSPACE/out:/workspace/out \
            -w /workspace \
            archlinux:base-devel bash -c "
              pacman -Syu --noconfirm &&
              pacman -S --noconfirm \
                cmake \
                ninja \
                qt5-base \
                qt5-multimedia \
                openal \
                sdl2 \
                glu &&
              mkdir -p build out &&
              cmake -G 'Unix Makefiles' -S ./yabause -B ./build \
                -DCMAKE_INSTALL_PREFIX='./out' \
                -DCMAKE_BUILD_TYPE=Release \
                -DYAB_USE_QT5=ON \
              &&
              make -C ./build && make -C ./build install
              
              #cmake -G Ninja -S ./yabause -B ./build \
              #ninja -C ./build && ninja -C ./build install
            "

      # Step 6: Upload build artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: kronos-artifact
          path: ./out/
